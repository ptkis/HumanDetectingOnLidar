import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class MainTest {
	JFrame frame;
	View view;
	Data data;
	Read read;
	JSlider sliderOfAccuracy;
	JSlider sliderOfDivisor;
	JSlider sliderOfPowerOfMaxGroup;
	JSlider sliderOfPowerOfVariance;
	JSlider sliderOfScale;
	JSlider sliderOfAngle;
	JSlider sliderOfShift;

	// minThreshold=maxDepth/divisor
	int shift = 50;
	int divisor = 10;
	int accuracy = 100;
	int powerOfMaxGroup = 0;
	int powerOfVariance = 100;
	int angle=360;
	int scale=120;
	boolean start = false;
	String file="1.txt";
	public static void main(String[] args) throws InterruptedException, IOException {
		MainTest main = new MainTest();
		main.init();
		while (true) {
			if (main.start) {
				main.step();
				Thread.sleep(2);
				//System.out.println("step!");
			}else{
				Thread.sleep(2);
				//System.out.println("NoStep!");
			}
		}


	}
	public void init() throws IOException {
		loadSettings();
		read = new Read(file);
		data = new Data(divisor, accuracy, powerOfMaxGroup, powerOfVariance);
		data.setDepths(read.getDataByText());
		// data.generate(400, 5, 20);
		frame = new JFrame();
		view = new View(data,angle,scale,shift);
		frame.add(view);
		JButton btn = new JButton("CLUSTER");
		btn.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				data.cluster();
				// data.display();
				frame.repaint();
			}

		});
		btn.setBounds(view.DEFAULT_SIZE, 0, view.WIDTH_BUTTON, 40);

		JButton btn2 = new JButton("UNCLUSTER");
		btn2.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				data.unCluster();
				frame.repaint();
			}

		});
		btn2.setBounds(view.DEFAULT_SIZE, 40, view.WIDTH_BUTTON, 40);

		JButton btn3 = new JButton("START");
		btn3.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if (start) {
					start = false;
					data.displayInitData();
					btn3.setText("START");
				} else {
					start = true;
					btn3.setText("STOP");
				}

			}

		});
		btn3.setBounds(view.DEFAULT_SIZE, 80, view.WIDTH_BUTTON, 40);

		JButton btn4 = new JButton("LOAD");
		btn4.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				FileDialog dialog = new FileDialog(new Frame(),"Load",FileDialog.LOAD);
				dialog.setVisible(true);
				file = dialog.getDirectory() + dialog.getFile();				
				try {
					read=new Read(file);
				} catch (FileNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				//Main.step();
				
				ArrayList<Cell> tmp;
				tmp = read.getDataByText();
				if (tmp == null) {
					System.exit(0);
					;
				}
				data.setDepths(tmp);
				if (data.isFlaged()) {
					data.cluster();
				}
				frame.repaint();
			}

		});
		btn4.setBounds(view.DEFAULT_SIZE, 120, view.WIDTH_BUTTON, 40);
		
		JButton btn5 = new JButton("FRAME1");
		btn5.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if (start) {
					start = false;
					btn3.setText("START");
				}
				String a="8719;8719;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;11086;11081;11026;10939;10864;10786;10730;10703;10676;10676;10716;10743;10776;10815;10839;10875;10896;10930;10943;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;12874;12844;12814;12813;12769;12707;12669;12669;12663;12656;12458;12458;12478;12478;12408;12347;12289;12253;12199;12122;12063;12008;12008;12183;12191;12237;17154;60000;60000;60000;60000;17714;17708;17667;17618;17618;17701;17748;17851;17933;18038;18133;18231;18337;18429;18546;18606;18606;18542;18487;18429;18365;18300;18300;60000;60000;18374;18374;18366;18361;18275;18205;18148;18086;18056;18006;17936;17936;17908;17373;17343;17295;17264;17194;17153;17123;17078;17032;16979;16953;16903;16870;16815;16769;16718;16718;60000;60000;16912;16894;16885;16885;16814;16774;16738;16701;16682;16645;16619;16575;16550;16510;9407;9390;9364;9359;9342;9342;9321;9301;9297;9281;9257;9244;9228;9220;9198;9178;9164;9149;9144;9127;9104;9099;9086;9066;9051;9039;9026;9019;9003;8994;8994;9052;9209;9317;9458;9618;9773;9943;10103;10319;10454;10684;10864;11058;11262;11477;11680;11948;12232;12472;12713;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;8625;8625;8625;8624;8624;8634;8634;8635;8628;8636;8630;8640;8639;8640;8640;8640;8640;8640;8649;8649;8649;8653;8653;8645;8645;8663;17594;17614;17615;17625;17640;17640;17640;17643;17664;17694;17695;17700;17718;17734;17737;17738;17764;17774;17774;9037;9037;9056;9062;9062;9062;9060;9054;8909;8836;8836;8855;8863;8874;8886;8903;8903;8921;8926;8937;8945;8948;8991;8993;9000;9011;9016;9030;9050;9058;9075;9084;9090;9114;9133;9143;9156;9157;9178;9181;9202;9229;9229;9254;9267;9292;9305;9321;9326;9359;9368;9393;9400;9434;9438;9450;9486;9507;9511;9539;9552;9574;9593;9610;9638;9668;9683;9689;9736;9745;9756;9788;9816;9833;9853;9897;9921;9938;9955;9984;10017;10019;10059;10082;10125;10136;10161;10190;10242;10248;10288;10310;10338;10365;10399;10434;10459;10499;10524;10561;10579;10608;10663;10701;10742;10756;10803;10839;10871;10913;10944;10980;11018;11058;11108;11138;11177;11218;11250;11300;11333;11364;11432;11458;11494;11557;11602;11634;11705;11737;11789;11837;11909;11944;11978;12061;12103;12146;12197;12257;12304;12373;12419;12484;12553;12603;12651;12723;12777;12841;12898;12960;12960;9406;9400;9372;9331;9305;9272;9243;9224;9176;9150;9105;9091;9053;9016;8992;8966;8921;8897;8861;8845;8809;8783;8756;8730;8713;8673;8651;8624;8588;8563;8552;8503;8474;8462;8443;8427;8411;8384;8362;8326;8307;8270;8268;8240;8226;8197;8180;8157;8140;8126;8114;8097;8058;8045;8031;8007;7983;7980;7957;7951;7922;7907;7887;7877;7858;7848;7821;7794;7792;7774;7761;7736;7732;7710;7709;7689;7673;7668;7645;7637;7626;7618;7602;7592;7570;7554;7551;7548;7523;7511;7488;7472;7436;7424;7418;7398;7397;7397;7497;7590;7633;9174;9182;9182;10663;10663;10653;10641;10626;10622;10612;10609;10612;60000;60000;12702;12702;12699;12680;12667;12662;12610;12610;12610;12574;12563;12541;12524;12513;12487;12470;12448;12441;12408;12379;12379;12376;12353;12315;12301;12289;12278;12278;12278;12250;12250;12243;12214;12208;12197;12194;12192;12164;12164;12168;12168;12173;60000;60000;12111;12111;12134;16565;16568;16565;16562;16562;16565;16566;16566;16566;16560;16567;16569;16569;16568;16568;16572;16576;16583;16591;16596;16596;16601;16606;16609;16609;16625;16625;16622;7274;7148;7096;7096;7097;7101;7111;7113;7135;7166;7177;7181;7187;7190;7196;7202;7208;7212;7212;7227;7230;7241;7249;7252;7259;7269;7269;7228;7197;7197;7297;7316;7330;7330;7318;7306;7206;7035;6829;6712;6613;6516;6427;6340;6258;6148;6092;5979;5914;5820;5762;5683;5605;5546;5475;5407;5349;5282;5221;5160;5096;5052;4987;4945;4885;4826;4779;4728;4683;4658;4598;4564;4512;4468;4428;4394;4352;4311;4272;4226;4188;4161;4125;4094;4054;4015;3985;3956;3917;3895;3853;3828;3798;3777;3733;3706;3683;3660;3634;3596;3570;3537;3530;3502;3476;3457;3422;3400;3378;3365;3344;3323;3295;3275;3247;3234;3217;3196;3176;3160;3154;3154;3154;3167;3173;3187;3194;3210;3221;3236;3246;3253;3259;3288;3295;3303;3309;3315;3344;3363;3376;3376;3375;3375;3418;3426;3432;3446;3454;3475;3495;3497;3497;3529;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;2574;2562;2554;2554;2562;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;1617;1606;1590;1579;1579;1573;1573;1565;1563;1559;1559;1562;1567;1576;1576;1582;1602;1681;1685;1691;1691;1687;1680;1676;1674;1672;1667;1580;1547;1547;1548;1548;1546;1543;1537;1537;1539;1539;1534;1533;1533;1532;1535;1532;1532;1523;1523;1522;1520;1520;1519;1519;1519;1518;1514;1513;1508;1508;1511;1512;1512;1512;1512;1507;1505;1493;1493;1474;1470;1448;880;879;802;753;739;737;736;736;736;732;732;739;739;740;743;743;736;735;736;741;741;732;732;738;740;742;742;743;751;751;751;750;745;744;744;749;750;750;744;744;757;758;760;760;759;756;755;753;747;747;749;751;751;751;751;751;743;743;743;738;738;742;742;742;737;738;737;733;733;732;724;724;735;735;728;725;725;732;732;710;697;683;683;694;694;687;687;687;687;690;695;695;693;693;701;710;712;716;737;842;868;873;873;1053";
				String[] tmp=a.split(";");
				ArrayList<Cell> list = new ArrayList<Cell>();
				for(int i=0;i<tmp.length;i++){
					list.add(new Cell(Integer.parseInt(tmp[i]),0));
				}
				data.setDepths(list);
				if(data.isFlaged())data.cluster();
				frame.repaint();

			}

		});
		btn5.setBounds(view.DEFAULT_SIZE, 160, view.WIDTH_BUTTON, 40);
		
		JButton btn6 = new JButton("FRAME2");
		btn6.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if (start) {
					start = false;
					btn3.setText("START");
				}
				String a="8722;8722;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;11119;11075;11000;10929;10844;10762;10747;10727;10679;10679;10712;10766;10794;10814;10840;10871;10900;10916;10920;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;12884;12883;12815;12768;12696;12683;12683;12683;12653;12479;12479;12479;12467;12406;12360;12292;12259;12187;12118;12052;12021;12021;12184;12193;12216;17127;60000;60000;60000;60000;17746;17704;17676;17640;17640;17640;17768;17861;17944;18030;18134;18228;18339;18450;18581;18622;18622;18537;18471;18426;18363;18328;18328;60000;60000;18376;18374;18367;18332;18283;18206;18171;18113;18033;17995;17934;17934;17841;17358;17342;17306;17258;17192;17151;17095;17077;17030;16995;16927;16902;16846;16835;16780;16735;16735;60000;60000;16902;16886;16878;16878;16848;16795;16747;16693;16677;16661;7809;7794;7794;7800;7800;7791;7785;7774;7753;7737;7737;7738;7787;9265;9265;9250;9231;9209;9197;9183;9169;9151;9137;9130;9110;9101;9081;9072;9062;9049;9043;9028;9010;8994;8994;9038;9206;9303;9478;9634;9759;9920;10136;10252;10446;10663;10857;11056;11270;11487;60000;60000;60000;7557;7532;7532;7557;7592;7603;7631;7756;7826;7830;7830;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;8637;8637;8637;8634;8625;8625;8633;8633;8630;7914;7812;7772;7730;7710;7701;7654;7615;7615;7643;7661;7706;8642;8642;8642;8642;8680;17607;17607;17619;17628;17637;17648;17649;17662;17663;17700;17708;17713;17728;17732;17746;17747;17755;17767;17767;9025;9025;9042;9046;9046;9052;9052;9052;8909;8844;8844;8850;8868;8880;8880;8895;8905;8911;8925;8936;8950;8962;8966;8981;8996;9006;9013;9030;9045;9059;9067;9085;9090;9107;9122;9141;9148;9159;9180;9197;9210;9214;9236;9250;9270;9281;9303;9316;9340;9352;9373;9392;9406;9420;9442;9470;9470;9500;9526;9529;9553;9564;9607;9619;9632;9652;9693;9708;9720;9752;9764;9783;9806;9836;9854;9889;9905;9918;9965;9979;9996;10054;10067;10089;10117;10142;10169;10198;10225;10259;10279;10304;10339;10365;10403;10435;10462;10506;10528;10552;10590;10622;10666;10690;10724;10771;10789;10825;10875;10898;10941;10978;11012;11051;11089;11132;11174;11203;11248;11284;11347;11369;11437;11459;11512;11551;11588;11652;11689;11753;11775;11833;11895;11947;12002;12052;12096;12148;12208;12261;12318;12356;12419;12476;12527;12586;12654;12716;12776;12831;12876;12962;12962;9445;9402;9360;9357;9288;9266;9239;9202;9154;9146;9114;9085;9042;9019;8976;8955;8926;8891;8875;8842;8816;8777;8757;8737;8701;8666;8641;8623;8599;8564;8548;8517;8486;8453;8441;8427;8398;8381;8372;8331;8311;8302;8271;8251;8221;8199;8178;8159;8134;8128;8110;8090;8072;8036;8032;8012;7999;7984;7960;7931;7921;7906;7889;7857;7848;7841;7818;7812;7798;7774;7773;7749;7732;7712;7709;7699;7679;7658;7645;7644;7623;7605;7596;7584;7582;7558;7550;7538;7516;7511;7502;7468;7429;7427;7412;7405;7403;7403;7494;7599;7629;9192;9192;9192;10667;10667;10651;10636;10634;10601;10601;10601;10610;60000;60000;12746;12726;12718;12714;12666;12666;12655;12611;12603;12596;12577;12555;12529;12506;12499;12474;12433;12420;12420;12408;12377;12377;12349;12321;12320;12320;12301;12263;12258;12243;12225;12240;12216;12199;12199;12196;12168;12168;12163;12166;12166;12207;60000;60000;12150;12117;12117;16565;16565;16552;16552;16556;16557;16557;16557;16555;16549;16549;16566;16566;16567;16567;16576;16576;16579;16579;16589;16598;16599;16600;16603;16612;16618;16620;16620;7284;7151;7098;7098;7099;7102;7106;7109;7137;7162;7172;7183;7189;7189;7192;7204;7208;7210;7225;7226;7233;7233;7236;7239;7260;7268;7268;7241;7212;7212;7304;7319;7327;7327;7321;7298;7209;7053;6834;6720;6613;6514;6424;6351;6256;6168;6079;5997;5916;5834;5765;5685;5614;5547;5469;5404;5341;5272;5225;5158;5098;5047;4997;4940;4886;4836;4789;4730;4688;4640;4597;4556;4519;4467;4432;4387;4347;4312;4264;4235;4196;4157;4116;4087;4052;4027;3987;3954;3916;3890;3850;3822;3803;3765;3739;3708;3683;3645;3627;3602;3576;3555;3520;3498;3473;3449;3427;3402;3384;3364;3340;3311;3292;3269;3256;3235;3211;3186;3169;3159;3150;3150;3165;3166;3178;3184;3198;3205;3222;3229;3250;3254;3260;3273;3287;3310;3319;3339;3342;3358;3373;3373;3375;3386;3426;3429;3439;3448;3449;3457;3489;3489;3511;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;2568;2557;2557;2542;2542;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;1608;1602;1588;1579;1570;1570;1566;1570;1562;1563;1563;1566;1566;1569;1573;1590;1602;1677;1691;1691;1685;1684;1683;1681;1679;1677;1665;1584;1551;1548;1543;1542;1540;1534;1534;1539;1539;1532;1531;1532;1532;1532;1532;1531;1531;1525;1522;1525;1522;1522;1520;1517;1515;1516;1516;1516;1516;1516;1512;1508;1508;1510;1510;1491;1475;1467;1447;1198;883;839;806;798;776;776;783;783;779;773;773;773;772;772;769;769;769;770;774;774;774;777;779;777;781;778;780;780;780;782;783;785;784;786;786;787;787;786;786;788;788;778;776;775;776;777;783;777;779;777;775;775;773;766;766;766;761;761;761;760;760;763;764;764;764;764;763;763;763;763;765;772;774;780;786;787;787;794;794;797;809;832;852;868;868;860;855;847;847;872;872;842;842;886;2254;2262;2267;2262;2257;2253;2253;2279;2279;2281;2288;2292";
				
				String[] tmp=a.split(";");
				ArrayList<Cell> list = new ArrayList<Cell>();
				for(int i=0;i<tmp.length;i++){
					list.add(new Cell(Integer.parseInt(tmp[i]),0));
				}
				data.setDepths(list);
				if(data.isFlaged())data.cluster();
				frame.repaint();

			}

		});
		btn6.setBounds(view.DEFAULT_SIZE, 200, view.WIDTH_BUTTON, 40);
	
		JButton btn7 = new JButton("FRAME3");
		btn7.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if (start) {
					start = false;
					btn3.setText("START");
				}
				String a="8717;8719;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;11068;11031;11020;10942;10830;10771;10745;10716;10700;10700;10711;10740;10769;10812;10835;10869;10893;10907;10918;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;12847;12815;12815;12771;12721;12693;12693;12693;12663;12462;12462;12475;12475;12413;12378;12288;12247;12192;12104;12040;12027;12027;12175;12206;12229;60000;60000;60000;60000;60000;60000;17702;17667;17631;17631;17663;17749;17841;17950;18042;18143;18220;18324;18447;18568;18632;18632;18547;18483;18417;18352;18312;18312;60000;60000;18395;18381;18358;18358;18269;18219;18156;18099;18056;17988;17934;17934;17898;17346;17339;17293;17250;17215;17137;17119;17061;17031;16990;16950;16894;16855;16804;16784;16735;16735;60000;60000;16931;16909;16881;16868;16814;16775;16761;16723;16699;16647;16595;16577;16538;9405;9386;9386;9362;9359;9349;9349;9330;9296;9290;9275;9268;9243;9228;9218;9191;9175;9165;9147;9146;9117;9110;9105;9089;9061;9055;9041;9033;9022;9017;8999;8999;9029;9194;9333;9472;9610;9768;9957;10118;10280;10454;10649;10839;11054;11267;11484;11673;11949;12228;12445;12703;13004;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;8638;8630;8630;8632;8632;8632;8622;8626;8625;8626;8630;8630;8636;8641;8641;8642;8644;8644;8642;8642;8651;8651;8651;8650;8652;8665;10012;10012;9973;9945;9925;9925;9936;9954;9960;9995;10117;17707;17721;17730;17736;17741;17780;17783;17783;9020;9020;9042;9049;9060;9067;9067;9049;8922;8836;8836;8853;8869;8872;8892;8892;8907;8919;8930;8934;8949;8964;8969;8984;8991;9002;9007;9039;9052;9067;9072;9080;9095;9119;9124;9131;9139;9169;9184;9192;9214;9218;9229;9248;9268;9290;9298;9329;9332;9359;9370;9385;9401;9431;9444;9458;9474;9503;9513;9530;9557;9574;9605;9609;9631;9658;9674;9699;9709;9745;9774;9785;9810;9835;9863;9883;9901;9937;9949;9972;10008;10032;10050;10090;10119;10124;10177;10193;10220;10251;10279;10321;10350;10373;10401;10423;10460;10506;10531;10564;10591;10644;10648;10691;10720;10764;10797;10832;10882;10914;10951;10980;11022;11044;11099;11128;11171;11210;11261;11285;11358;11382;11429;11458;11498;11555;11599;11656;11683;11727;11794;11858;11893;11945;11973;12054;12106;12157;12196;12279;12328;12373;12413;12498;12535;12609;12653;12718;12770;12835;12909;12976;12976;9437;9410;9359;9358;9308;9267;9236;9215;9178;9141;9109;9084;9049;9010;8987;8961;8925;8895;8870;8853;8806;8781;8746;8720;8689;8676;8643;8622;8592;8572;8545;8512;8507;8461;8448;8414;8412;8389;8352;8329;8315;8282;8272;8240;8229;8210;8176;8146;8144;8119;8096;8091;8052;8048;8028;8002;7984;7970;7953;7937;7924;7896;7892;7861;7842;7835;7814;7813;7802;7774;7765;7749;7726;7713;7699;7682;7681;7657;7655;7633;7617;7612;7605;7581;7571;7560;7553;7545;7519;7506;7491;7469;7433;7433;7416;7409;7392;7392;7494;7600;7644;9196;9196;9196;10677;10677;10655;10635;10617;10617;10616;10612;10612;60000;60000;12719;12703;12703;12693;12680;12655;12640;12640;12599;12584;12578;12537;12535;12510;12467;12467;12464;12411;12407;12385;12369;12346;12346;12319;12277;12277;12270;12268;12260;12255;12216;12216;12218;12218;12190;12176;12188;12176;12159;12140;12140;12155;60000;60000;60000;12172;12172;16547;16561;16557;16557;16557;16570;16570;16555;16555;16565;16565;16569;16566;16571;16566;16573;16574;16585;16585;16592;16590;16592;16611;16611;16611;16615;16624;16624;7282;7155;7086;7086;7101;7103;7113;7117;7141;7166;7172;7178;7183;7197;7197;7204;7206;7209;7218;7225;7233;7244;7247;7254;7262;7263;7263;7233;7214;7214;7307;7309;7323;7324;7324;7292;7215;7033;6844;6712;6614;6512;6443;6343;6258;6170;6077;5993;5908;5821;5766;5680;5606;5538;5470;5413;5333;5274;5220;5162;5103;5054;5002;4934;4886;4832;4785;4739;4685;4637;4598;4553;4516;4477;4426;4388;4348;4306;4269;4230;4187;4156;4117;4095;4053;4022;3980;3946;3914;3886;3861;3823;3800;3771;3748;3712;3681;3660;3628;3595;3571;3558;3524;3495;3468;3456;3428;3408;3381;3357;3330;3318;3289;3273;3254;3236;3211;3196;3174;3157;3149;3149;3156;3157;3173;3196;3198;3215;3229;3235;3246;3251;3257;3266;3299;3311;3320;3327;3345;3357;3375;3375;3386;3393;3414;3447;3447;3447;3466;3472;3483;3517;3529;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;2560;2560;2557;2552;2552;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;60000;1610;1591;1591;1581;1572;1569;1563;1563;1559;1568;1568;1568;1569;1572;1578;1580;1606;1675;1685;1690;1686;1686;1686;1679;1677;1672;1664;1577;1549;1549;1549;1548;1547;1544;1543;1540;1539;1538;1532;1530;1529;1525;1525;1527;1527;1524;1522;1522;1522;1523;1523;1519;1519;1517;1517;1515;1515;1515;1511;1510;1509;1506;1505;1496;1489;1471;1460;1053;964;897;844;823;807;787;781;775;765;765;763;761;761;762;763;763;763;763;763;765;766;765;766;766;768;768;772;765;766;766;771;773;776;776;771;771;771;771;771;776;777;776;762;760;760;770;771;771;765;765;766;767;767;758;758;754;754;748;748;748;748;742;742;742;741;740;735;735;735;711;694;694;694;692;692;692;684;684;685;688;688;688;688;689;690;691;691;691;695;695;695;696;701;731;743;763;2263;2263;2259;2255;2259;2266;2266;2269;2279;2279";
				String[] tmp=a.split(";");
				ArrayList<Cell> list = new ArrayList<Cell>();
				for(int i=0;i<tmp.length;i++){
					list.add(new Cell(Integer.parseInt(tmp[i]),0));
				}
				data.setDepths(list);
				if(data.isFlaged())data.cluster();
				frame.repaint();

			}

		});
		btn7.setBounds(view.DEFAULT_SIZE, 240, view.WIDTH_BUTTON, 40);
		
		JButton btn8 = new JButton("NUM");
		btn8.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(view.isNumbered){
					view.isNumbered=false;
				}else{
					view.isNumbered=true;
				}
				frame.repaint();

			}

		});
		btn8.setBounds(view.DEFAULT_SIZE, 280, view.WIDTH_BUTTON, 40);
		view.setLayout(null);
		view.add(btn);
		view.add(btn2);
		view.add(btn3);
		view.add(btn4);
		view.add(btn5);
		view.add(btn6);
		view.add(btn7);
		view.add(btn8);

		/*sliderOfAccuracy = new JSlider(1, 1000, accuracy);
		sliderOfAccuracy.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				accuracy = slider.getValue();
				data.setAccuracy(accuracy);
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfAccuracy.setBounds(view.DEFAULT_SIZE, 190, view.WIDTH_BUTTON, 40);
		view.add(sliderOfAccuracy);*/
		sliderOfShift = new JSlider(-100, 1000, shift);
		sliderOfShift.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				shift = slider.getValue();
				view.shift=shift;
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfShift.setBounds(view.DEFAULT_SIZE, 480, view.WIDTH_BUTTON, 40);
		view.add(sliderOfShift);

		sliderOfDivisor = new JSlider(1, 500, divisor);
		sliderOfDivisor.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				divisor = slider.getValue();
				data.setDivisor(divisor);
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfDivisor.setBounds(view.DEFAULT_SIZE, 510, view.WIDTH_BUTTON, 40);
		view.add(sliderOfDivisor);

		sliderOfPowerOfMaxGroup = new JSlider(0, 100, powerOfMaxGroup);
		sliderOfPowerOfMaxGroup.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				powerOfMaxGroup = slider.getValue();
				powerOfVariance = 100 - powerOfMaxGroup;
				sliderOfPowerOfVariance.setValue(100 - powerOfMaxGroup);
				data.setPowerOfMaxGroup(powerOfMaxGroup);
				data.setPowerOfVariance(powerOfVariance);
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfPowerOfMaxGroup.setBounds(view.DEFAULT_SIZE, 540, view.WIDTH_BUTTON, 40);
		view.add(sliderOfPowerOfMaxGroup);

		sliderOfPowerOfVariance = new JSlider(0, 100, powerOfVariance);
		sliderOfPowerOfVariance.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				powerOfVariance = slider.getValue();
				powerOfMaxGroup = 100 - powerOfVariance;
				data.setPowerOfMaxGroup(powerOfMaxGroup);
				data.setPowerOfVariance(powerOfVariance);
				sliderOfPowerOfMaxGroup.setValue(100 - powerOfVariance);
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfPowerOfVariance.setBounds(view.DEFAULT_SIZE, 570, view.WIDTH_BUTTON, 40);
		view.add(sliderOfPowerOfVariance);

		sliderOfScale = new JSlider(1, 600, scale);
		sliderOfScale.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				scale=view.scale = slider.getValue();
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfScale.setBounds(view.DEFAULT_SIZE, 600, view.WIDTH_BUTTON, 40);
		view.add(sliderOfScale);

		sliderOfAngle = new JSlider(0, 360, angle);
		sliderOfAngle.addChangeListener(new ChangeListener() {

			@Override
			public void stateChanged(ChangeEvent e) {
				// TODO Auto-generated method stub
				JSlider slider = (JSlider) e.getSource();
				angle=view.totalAngle = slider.getValue();
				 try {
					saveSettings();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				if (data.isFlaged()) {
					data.unCluster();
					data.cluster();
				}
				frame.repaint();
			}
		});
		sliderOfAngle.setBounds(view.DEFAULT_SIZE, 630, view.WIDTH_BUTTON, 40);
		view.add(sliderOfAngle);

		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setResizable(false);
		frame.setTitle("Cluster");

		frame.pack();

		frame.setVisible(true);
	}

	public void step() throws InterruptedException {
		ArrayList<Cell> tmp;
		Thread.sleep(28);
		tmp = read.getDataByText();
		if (tmp == null) {
			System.exit(0);
			;
		}
		data.setDepths(tmp);
		if (data.isFlaged()) {
			data.cluster();
		}
		frame.repaint();
	}
	public void loadSettings() throws FileNotFoundException, IOException{
		String tmpName="program.properties";
		if(new File(tmpName).exists()){
			Properties settings = new Properties();
			settings.load(new FileInputStream(tmpName));
			divisor= Integer.parseInt(settings.getProperty("divisor","10"));
			shift=Integer.parseInt(settings.getProperty("shift","100"));
			accuracy=Integer.parseInt(settings.getProperty("accuracy","100"));
			powerOfMaxGroup=Integer.parseInt(settings.getProperty("powerOfMaxGroup","0"));
			powerOfVariance=Integer.parseInt(settings.getProperty("powerOfVariance","100"));
			angle=Integer.parseInt(settings.getProperty("angle","360"));
			scale=Integer.parseInt(settings.getProperty("scale","120"));
			file=settings.getProperty("file","1.txt");
		}
	}
	public void saveSettings() throws IOException{
		String tmpName="program.properties";
		Properties settings = new Properties();
		settings.put("divisor",  String.valueOf(divisor));
		settings.put("shift",  String.valueOf(shift));
		settings.put("accuracy",String.valueOf(accuracy));
		settings.put("powerOfMaxGroup",String.valueOf(powerOfMaxGroup));
		settings.put("powerOfVariance",String.valueOf(powerOfVariance));
		settings.put("angle",String.valueOf(angle));
		settings.put("scale",String.valueOf(scale));
		settings.put("file",file);
		FileOutputStream out = new FileOutputStream(tmpName);
		settings.store(out,"program properties");
	}
}
